import pandas as pd
import requests
from bs4 import BeautifulSoup
import numpy as np
import streamlit as st

# Function to extract product title
def product_extract(soup):
    try:
        title = soup.find("span", attrs={"id": 'productTitle'})
        title_value = title.text
        title_string = title_value.strip()
    except Exception as e:
        title_string = ""
    return title_string

# Function to extract product price
def price(soup):
    try:
        price = soup.find('span', attrs={'class': 'a-offscreen'}).string.strip()
    except Exception as e:
        price = ""
    return price

# Function to extract product MRP
def mrp(soup):
    try:
        mrp = soup.find('span', {'class': 'a-price a-text-price'}).find('span', attrs={'class': 'a-offscreen'}).text
    except Exception as e:
        mrp = ""
    return mrp

# Function to extract product brand
def brand(soup):
    try:
        brand = new_soup.find('tr', {'class': 'a-spacing-small po-brand'}).find('span', {'class': 'a-size-base po-break-word'}).text
    except Exception as e:
        brand = ""
    return brand

# Function to extract product ASIN
def asin_(soup):
    try:
        asin = new_soup.find('div', {'id': 'averageCustomerReviews'}).get('data-asin')
    except Exception as e:
        asin = ""
    return asin

# Function to extract product rating
def rating(soup):
    try:
        rating = new_soup.find('span', attrs={'id': 'acrPopover'}).text.strip()[0:3]
    except Exception as e:
        rating = ""
    return rating

if __name__ == '__main__':
    # Set page title
    st.title('AMAZON WEB SCRAPPING')

    # Input category from user
    category = st.text_input("Enter your Category or type of product:")

    # Set HTTP headers
    HEADERS = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36', 'Accept-Language': 'en-US, en;q=0.5'}
    url = f"https://www.amazon.in/s?k={category}"

    # HTTP request
    
    webpage = requests.get(url, headers=HEADERS)
    soup = BeautifulSoup(webpage.content, 'html.parser')

    links = soup.find_all('a', attrs={'class': 'a-link-normal s-no-outline'})
    

    link_list = []
    for i in links:
        link_list.append(i.get('href'))

    d = {'brand': [], 'title': [], 'asin': [], 'price': [], 'mrp': [], 'rating': []}

    if __name__ == '__main__':
        #add HEADERS
        cat = st.write('Enter your category name:')
        url = f"https://www.amazon.in/s?k={cat}"
        HEADERS = ({'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36', 'Accept-Language': 'en-US, en;q=0.5'})
        

        # HTTP REQUEST
        webpage = requests.get(url,headers=HEADERS)
        
        soup = BeautifulSoup(webpage.content,'html.parser')
        
        links = soup.find_all('a',attrs = {'class':'a-link-normal s-no-outline'})
        
        link_list = []
        
        for link in links:
            link_list.append(link.get('href'))
            
            
        d = {'brand':[],'title':[],'asin':[],'price':[],'mrp':[],'rating':[]}
        
        # looping to extract product details
        try:
            for link in link_list:
                new_webpage = requests.get("https://www.amazon.in"+link ,headers=HEADERS)

                new_soup = BeautifulSoup(new_webpage.content,'html.parser')
                d['brand'].append(brand(new_soup))
                d['title'].append(product_extract(new_soup))
                d['asin'].append(asin_(new_soup))
                d['price'].append(price(new_soup))
                d['mrp'].append(mrp(new_soup))
                d['rating'].append(rating(new_soup))
        except Exception as e:
            d['brand'].append("")
            d['title'].append("")
            d['asin'].append("")
            d['price'].append("")
            d['mrp'].append("")
            d['rating'].append("")
        
        amazon_df = pd.DataFrame.from_dict(d)
        amazon_df['title'].replace('', np.nan, inplace=True)
        amazon_df = amazon_df.dropna(subset=['title'])

        st.dataframe(amazon_df, use_container_width=True)
print(url)
